package crack_interview;
import java.util.*;
public class wordbreak2 {
	public static List<String> wordBreak(String s, Set<String> dict){
	    HashMap<Integer, List<String>> map = new HashMap<Integer, List<String>>();
	    List<String> first = new ArrayList<String>();
	    first.add("");
	    map.put(s.length(), first);
	    for(int i = s.length() - 1; i >= 0; i--)
	    {
	        List<String> temp = new ArrayList<String>();
	        for(int j = i+1; j <= s.length(); j++){
	            String str = s.substring(i,j);
	            if(dict.contains(str)){
	                for(String prev: map.get(j)){
	                	if(prev.isEmpty()){
	                		temp.add(str);
	                	}else{
	                		temp.add(prev + " "+ str);
	                	}
	                    
	                }
	            }
	        }
	        map.put(i, temp);
	    }
	    return map.get(0);
//		 Map<Integer, List<String>> validMap = new HashMap<Integer, List<String>>();
//		   List<String> l = new ArrayList<String>();
//	        l.add("");
//	        validMap.put(s.length(), l);
//
//	        // generate solutions from the end
//	        for(int i = s.length() - 1; i >= 0; i--) {
//	            List<String> values = new ArrayList<String>();
//	            for(int j = i + 1; j <= s.length(); j++) {
//	                if (dict.contains(s.substring(i, j))) {
//	                    for(String word : validMap.get(j)) {
//	                        values.add(s.substring(i, j) + (word.isEmpty() ? "" : " ") + word);
//	                    }
//	                }
//	            }
//	            validMap.put(i, values);
//	        }
//	        return validMap.get(0);
	}
	public static void main(String[]args){
		String s = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab";
		String[]dict = {"a","aa","aaa","aaaa","aaaaa","aaaaaa","aaaaaaa","aaaaaaaa","aaaaaaaaa","aaaaaaaaaa"};
		Set<String> set = new HashSet<String>();
		for(String temp: dict)
			set.add(temp);
		List<String> list = new wordbreak2().wordBreak(s, set);
		for(String temp: list)
			System.out.println(temp);
	}
}
